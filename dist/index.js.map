{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSafeCast = require( '@stdlib/ndarray-base-assert-is-safe-data-type-cast' );\nvar isMostlySafeCast = require( '@stdlib/ndarray-base-assert-is-mostly-safe-data-type-cast' );\nvar isSameKindCast = require( '@stdlib/ndarray-base-assert-is-same-kind-data-type-cast' );\nvar resolveStr = require( '@stdlib/ndarray-base-dtype-resolve-str' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a provided ndarray data type can be cast to another ndarray data type according to a specified casting mode.\n*\n* @param {*} from - ndarray data type\n* @param {*} to - ndarray data type\n* @param {string} casting - ndarray casting mode\n* @returns {boolean} boolean indicating if a data type can be cast to another data type\n*\n* @example\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\nfunction isAllowedCast( from, to, casting ) {\n\tvar dt1;\n\tvar dt2;\n\n\t// Anything goes for \"unsafe\" casting...\n\tif ( casting === 'unsafe' ) {\n\t\treturn true;\n\t}\n\tdt1 = resolveStr( from );\n\tdt2 = resolveStr( to );\n\n\t// \"Casting\" to the same data type is always allowed, regardless of the casting mode...\n\tif ( dt1 === dt2 ) {\n\t\treturn true;\n\t}\n\t// No casts between different data types are allowed in \"none\" or \"equiv\" casting modes...\n\tif ( casting === 'none' || casting === 'equiv' ) {\n\t\treturn false;\n\t}\n\t// In \"safe\" casting mode, only casts which preserve values are allowed...\n\tif ( casting === 'safe' ) {\n\t\treturn isSafeCast( from, to );\n\t}\n\t// In \"mostly-safe\" casting mode, in addition to \"safe\" casts, for floating-point data types, downcasts are allowed...\n\tif ( casting === 'mostly-safe' ) {\n\t\treturn isMostlySafeCast( from, to );\n\t}\n\t// In \"same-kind\" casting mode, in addition to \"safe\" casts, casts within a \"kind\" (e.g., between signed integers or between floating-point numbers) are allowed...\n\treturn isSameKindCast( from, to );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAllowedCast;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine if an array data type can be cast to another array data type according to a specified casting rule.\n*\n* @module @stdlib/ndarray-base-assert-is-allowed-data-type-cast\n*\n* @example\n* var isAllowedCast = require( '@stdlib/ndarray-base-assert-is-allowed-data-type-cast' );\n*\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,oDAAqD,EAC3EC,EAAmB,QAAS,2DAA4D,EACxFC,EAAiB,QAAS,yDAA0D,EACpFC,EAAa,QAAS,wCAAyC,EAoBnE,SAASC,EAAeC,EAAMC,EAAIC,EAAU,CAC3C,IAAIC,EACAC,EAUJ,OAPKF,IAAY,WAGjBC,EAAML,EAAYE,CAAK,EACvBI,EAAMN,EAAYG,CAAG,EAGhBE,IAAQC,GACL,GAGHF,IAAY,QAAUA,IAAY,QAC/B,GAGHA,IAAY,OACTP,EAAYK,EAAMC,CAAG,EAGxBC,IAAY,cACTN,EAAkBI,EAAMC,CAAG,EAG5BJ,EAAgBG,EAAMC,CAAG,CACjC,CAKAP,EAAO,QAAUK,IC1CjB,IAAIM,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isSafeCast", "isMostlySafeCast", "isSameKindCast", "resolveStr", "isAllowedCast", "from", "to", "casting", "dt1", "dt2", "main"]
}
